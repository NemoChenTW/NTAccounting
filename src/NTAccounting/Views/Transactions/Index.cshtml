@model IEnumerable<NTAccounting.Models.Transaction>

@{
    ViewData["Title"] = "Index";
}

<h2>
    <a asp-controller="Transactions" asp-action="Index" asp-route-id="@null">Index</a>
</h2>

<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.1/jquery.min.js"></script>

<script type="text/javascript">

    function updateSubTC(MainTC, SubTC) {
        var $subType = $('#' + SubTC)
        var selectedItem = $('#' + MainTC).val();   // MainCategoryID
        $.ajax({
            type: "GET",
            dataType: "json",
            url: "@Url.Action("GetSubTransactionCategoryJson", "Transactions")",
            data: { id: selectedItem },
            success: function (data) {
                $subType.html('');
                $.each(data, function (i) {
                    $subType.append('<option value="' + data[i].Value + '">' + data[i].Text + '</option>');
                });
            },
            error: function (xhr) {
                alert('Error!.');
            }
        })
    };

    function updateFinacialACID(UsrGrpID, FinacialACID) {
        var $FinacialACsubType = $('#' + FinacialACID)
        var selectedItem = $('#' + UsrGrpID).val();   // UsrGrpID
        $.ajax({
            type: "GET",
            dataType: "json",
            url: "@Url.Action("GetFinancialAccountJson", "FinancialAccounts")",
            data: { userGroupID: selectedItem },
            success: function (data) {
                $FinacialACsubType.html('');
                $.each(data, function (i) {
                    $FinacialACsubType.append('<option value="' + data[i].Value + '">' + data[i].Text + '</option>');
                });
            },
            error: function (xhr) {
                alert('Error!.');
            }
        })
    };

</script>

<!-- TransactionType modal -->
@{
    var TransTypes = Enum.GetValues(typeof(TransactionCategory.TransactionCategoryType)).Cast<TransactionCategory.TransactionCategoryType>();
    var createModel = new NTAccounting.Models.MainTransactionCategory();
}

@foreach (TransactionCategory.TransactionCategoryType type in TransTypes)
{
    createModel.TransactionType = type;
    var ModalTitle = @createModel.CreateTitle + @Html.DisplayNameFor(model => model.Name);
    var modalName = createModel.TransactionType.ToString() + "-modal";

    <button type="button" class="btn btn-primary" data-toggle="modal" data-target=".@modalName">@ModalTitle</button>
    <div class="modal fade @modalName" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content  col-md-8 col-md-offset-2">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                    <h4 class="modal-title" id="myModalLabel">
                        <b>@ModalTitle</b>
                    </h4>
                </div>
                <div>
                    @await Component.InvokeAsync("TransactionCreate", type);
                    @*@Html.Partial("_Create", (NTAccounting.ViewModels.Transactions.TransactionsCreateViewModel)@ViewBag.viewModelCreate)*@
                </div>
            </div>
        </div>
    </div>
}

<br /><br />

<div role="tabpanel">
    <!-- Nav tabs -->
    <ul class="nav nav-tabs" role="tablist">
        <li role="presentation" class="active"><a href="#home" aria-controls="home" role="tab" data-toggle="tab">ALL</a></li>
        @foreach (var acName in ViewBag.viewModel.FinacialAccountNameList)
        {
            <li role="presentation"><a href="#@acName" aria-controls="profile" role="tab" data-toggle="tab">@acName</a></li>
        }
    </ul>
    <!-- Tab panes -->
    <div class="tab-content">
        <div role="tabpanel" class="tab-pane fade in active" id="home">
            <table class="table">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Time)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.FinancialAccountID)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Amount)
                    </th>
                    <th></th>
                </tr>

                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Time)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            @if (item.TargetFinancialAccountID == null)
                            {
                                @Html.DisplayFor(modelItem => item.FinancialAccount.Name)
                            }
                            else
                            {
                                @Html.DisplayFor(modelItem => item.FinancialAccount.Name)
                                <text> => </text>
                                @Html.DisplayFor(modelItem => item.TargetFinancialAccount.Name)
                            }
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Amount)
                        </td>
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                            <a asp-action="Details" asp-route-id="@item.ID">Details</a> |
                            <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                        </td>
                    </tr>
                }
            </table>
        </div>

        @foreach (var acName in ViewBag.viewModel.FinacialAccountNameList)
        {
            <div role="tabpanel" class="tab-pane fade" id="@acName">
                <table class="table">
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.Time)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Name)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.FinancialAccountID)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Amount)
                        </th>
                        <th></th>
                    </tr>

                    @foreach (var item in Model)
                    {
                        @if(item.FinancialAccount.Name == @acName
                            || ((item.TargetFinancialAccountID != null) && item.TargetFinancialAccount.Name == acName))
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Time)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Name)
                                </td>
                                <td>
                                    @if (item.TargetFinancialAccountID == null)
                                    {
                                        @Html.DisplayFor(modelItem => item.FinancialAccount.Name)
                                    }
                                    else
                                    {
                                        @Html.DisplayFor(modelItem => item.FinancialAccount.Name)
                                        <text> => </text>
                                        @Html.DisplayFor(modelItem => item.TargetFinancialAccount.Name)
                                    }
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Amount)
                                </td>
                                <td>
                                    <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                                    <a asp-action="Details" asp-route-id="@item.ID">Details</a> |
                                    <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                                </td>
                            </tr>
                        }
                    }
                </table>
            </div>
        }
    </div>
</div>

<div>
    <a asp-controller="Transactions" asp-action="Index" asp-route-id="@null">Back to List</a>
</div>